{"version":3,"sources":["files/Angad-Singh-resume.pdf","img/pic.jpg","scripts/Menu.js","scripts/About.js","scripts/Education.js","scripts/Projects.js","scripts/Contact.js","scripts/Work.js","scripts/Publications.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","react_default","a","createElement","className","id","href","pdf","Component","About","style","paddingTop","padding","src","pic","alt","Education","Projects","Contact","Work","Publication","App","Menu","scripts_About","scripts_Education","Publications","scripts_Work","scripts_Projects","scripts_Contact","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kQC6CzBC,mLAjCX,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCAAwCC,GAAG,aACxDJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWE,KAAK,UAA7B,SAA4CL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,eAE9CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWE,KAAK,cAA7B,cAEFL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWE,KAAK,gBAA7B,gBAEFL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWE,KAAK,SAA7B,oBAEFL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWE,KAAK,aAA7B,aAEFL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWE,KAAK,YAA7B,YAEFL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWE,KAAMC,KAA9B,kBA/BSC,8BC+BNC,mLArBX,OAEIR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUM,MAAO,CAACC,WAAY,SACzCV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASM,MAAO,CAACE,QAAS,QACvCX,EAAAC,EAAAC,cAAA,OAAKU,IAAKC,IAAKC,IAAI,KAAKX,UAAU,mBAClCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qCAAqCC,GAAG,SAArD,gBAKFJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,mWAlBQI,aCmBLQ,mLAfX,OAEIf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAASC,GAAG,aAAzB,aACAJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAb,6CAC0CH,EAAAC,EAAAC,cAAA,WAD1C,kDAE+CF,EAAAC,EAAAC,cAAA,WAF/C,mCAGgCF,EAAAC,EAAAC,cAAA,oBAdpBK,aC0ETS,mLAnEX,OAEIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAASC,GAAG,YAAzB,qBACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,mCACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,6BAEJH,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,oVAGAF,EAAAC,EAAAC,cAAA,2KAGAF,EAAAC,EAAAC,cAAA,iKAGAF,EAAAC,EAAAC,cAAA,kIAMJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,oDACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,+BAEJH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,iJAGAF,EAAAC,EAAAC,cAAA,2KAGAF,EAAAC,EAAAC,cAAA,+JAMRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,8BACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,iCAEJH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,iOAGAF,EAAAC,EAAAC,cAAA,6LAGAF,EAAAC,EAAAC,cAAA,gIA9DGK,aC2BRU,mLApBX,OAEEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gDAAgDC,GAAG,WAC9DJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,uBAC0BH,EAAAC,EAAAC,cAAA,WAD1B,cAEiBF,EAAAC,EAAAC,cAAA,WAFjB,UAGaF,EAAAC,EAAAC,cAAA,WAHb,sBAIyBF,EAAAC,EAAAC,cAAA,YAEzBF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAb,sCACyCH,EAAAC,EAAAC,cAAA,WADzC,WAEcF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,kCAAR,kCAA2EL,EAAAC,EAAAC,cAAA,WAFzF,aAGgBF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,yCAAR,kDAnBJE,aCkEPW,mLA5DX,OAEIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAASC,GAAG,QAAzB,mBACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,8DACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,8BAEJH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,4IAGAF,EAAAC,EAAAC,cAAA,oMAIAF,EAAAC,EAAAC,cAAA,mLAIAF,EAAAC,EAAAC,cAAA,oNAIAF,EAAAC,EAAAC,cAAA,8FAKRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,iDACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,gCAEJH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mLAGAF,EAAAC,EAAAC,cAAA,2MAIAF,EAAAC,EAAAC,cAAA,uIAGAF,EAAAC,EAAAC,cAAA,iIAGAF,EAAAC,EAAAC,cAAA,kLAvDDK,aCqCJY,mLA9BX,OAEInB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAASC,GAAG,eAAzB,eACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,sDACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,+BAEJH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,4QAGAF,EAAAC,EAAAC,cAAA,iPAGAF,EAAAC,EAAAC,cAAA,mOAGAF,EAAAC,EAAAC,cAAA,uIA1BMK,aCsBXa,MAdf,WACE,OACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACqB,EAAD,MACAvB,EAAAC,EAAAC,cAACsB,EAAD,MACAxB,EAAAC,EAAAC,cAACuB,EAAD,MACAzB,EAAAC,EAAAC,cAACwB,EAAD,MACA1B,EAAAC,EAAAC,cAACyB,EAAD,QCRcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOlC,EAAAC,EAAAC,cAACiC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d7016842.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Angad-Singh-resume.b9b06373.pdf\";","module.exports = __webpack_public_path__ + \"static/media/pic.b60c65e6.jpg\";","import React, { Component } from 'react';\r\nimport pdf from '../files/Angad-Singh-resume.pdf'\r\n\r\n\r\nclass NavBar extends Component {\r\n  /**\r\n   * Class that represents the UI component that will be displayed on every page. \r\n   * This includes the modals for creating a post and login to the server. \r\n   */\r\n\r\n  render() {\r\n\r\n    return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light menu\">\r\n      <div className=\"collapse navbar-collapse cl-effect-15\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#About\">About <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#Education\">Education</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#Publication\">Publication</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#Work\">Work Experience</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#Projects\">Projects</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#Contact\">Contact</a>\r\n          </li>\r\n          <li className=\"nav-item\"> \r\n            <a className=\"nav-link\" href={pdf}>PDF</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport pic from '../img/pic.jpg';\r\nimport '../css/menu.css';\r\n\r\n\r\n\r\nclass About extends Component {\r\n  /**\r\n   * Class that represents the UI component that will be displayed on every page. \r\n   * This includes the modals for creating a post and login to the server. \r\n   */\r\n\r\n  render() {\r\n\r\n    return (\r\n  \r\n        <div className=\"section\" style={{paddingTop: \"60px\"}}> \r\n            <nav className=\"navbar\" style={{padding: \"0px\"}}>\r\n              <img src={pic} alt=\"na\" className=\"card-title pic\"/>\r\n              <p className=\"card-title header halfCircleBottom\" id=\"About\">\r\n                Angad Singh\r\n              </p>\r\n            </nav>\r\n\r\n            <p className=\"details\">I am graduating computer science specialist program at the University of Toronto. I have a\r\n            strong background in languages such as Bash, Python, JavaScript and C#. Through my experiences and\r\n            projects in university I have gained communication, teamwork, organization and problem solving\r\n            skills. I am looking for a career in software development. \r\n            </p>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default About;","import React, { Component } from 'react';\r\n\r\n\r\nclass Education extends Component {\r\n  /**\r\n   * Class that represents my Education Details \r\n   */\r\n\r\n  render() {\r\n\r\n    return (\r\n  \r\n        <div className=\"section\"> \r\n            <p className=\"header\" id=\"Education\">Education</p>\r\n            <p className=\"details\">\r\n            University of Toronto Sept 2014 - May 2018<br/>\r\n            Honors Bachelor of Science in Computer Science,<br/>\r\n            Focus in Artificial Intelligence<br/>\r\n            </p>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Education;","import React, { Component } from 'react';\r\n\r\n\r\nclass Projects extends Component {\r\n  /**\r\n   * Class that represents my University Projects and Side Projects \r\n   */\r\n\r\n  render() {\r\n\r\n    return (\r\n        \r\n        <div className=\"section\"> \r\n            <p className=\"header\" id=\"Projects\">Academic Projects</p>\r\n            <div className=\"card card-style\" >\r\n                <nav className=\"navbar\">\r\n                    <h5 className=\"card-title\"> Riff Warrior â€“ C#, Unity </h5> \r\n                    <h5 className=\"card-title\"> Sept 2017 - April 2018 </h5> \r\n                </nav>\r\n                <ul>\r\n                <li>\r\n                    Worked with a diverse team of programmers, artists and musicians to create a third person action adventure game in the Unity game engine. The game utilized the rock band controller for player movement and the battle system. The game was showcased at the Level-Up 2018, student games showcase, at the Design Exchange in Toronto\r\n                </li> \r\n                <li> \r\n                    Players would explore a maze to search for an exit. At the end there would be a final boss for players to defeat, which would be similar to a rock band song. \r\n                </li> \r\n                <li> \r\n                    Created a tutorial for players to get accustomed to the game controls. In addition it would introduce players to the rhythm based battle mechanics. \r\n                </li>\r\n                <li> \r\n                    Performed user testing with other students to find game bugs and to receive feedback in order to improve gameplay. \r\n                </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"card card-style\" >\r\n                <nav className=\"navbar\">\r\n                    <h5 className=\"card-title\"> Group Finder â€“ JavaScript, React, Node JS </h5>  \t\r\n                    <h5 className=\"card-title\">  May 2018 â€“ Sep 2018</h5>  \r\n                </nav>\r\n                <ul>\r\n                    <li> \r\n                        Worked with peers to create a tool that would help students post their personal projects in order to find like minded team members.  \r\n                    </li> \r\n                    <li> \r\n                        Created a Mongo database to hold user data and theirs posts. Ensured that the web page was correctly pulling and posting data to and from the Mongo database.\r\n                    </li> \r\n                    <li> \r\n                        Developed front end UI using React for posting and viewing profiles. Collaborated with team members to improve the usability for the interface. \r\n                    </li> \r\n                </ul>\r\n            </div> \r\n\r\n            <div className=\"card card-style\" >\r\n                <nav className=\"navbar\">\r\n                    <h5 className=\"card-title\">  CSP Problem Solver - C# </h5> \r\n                    <h5 className=\"card-title\"> July 2017 â€“ Sept 2017 </h5>\r\n                </nav> \r\n                <ul>\r\n                    <li> \r\n                        Created a constraint satisfaction problem solver in Python. The program takes variables and theirs constraints. The program will provide a valid assignment for each of the variables within the given constraints. \r\n                    </li> \r\n                    <li> \r\n                        Implemented a Nonogram puzzle in order to test the performance and correctness of the program. The result of the puzzle would be displayed in a UI using the Tkinter Python API  \r\n                    </li> \r\n                    <li> \r\n                        Converted the program into C# and improved memory efficiency using lambda functions for the constraints. \r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Projects;\r\n ","import React, { Component } from 'react';\r\n\r\n\r\nclass Contact extends Component {\r\n  /**\r\n   * Class that represents my Contacts details, Linkedin and Github \r\n   */\r\n\r\n  render() {\r\n\r\n    return (\r\n  \r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" id=\"Contact\">\r\n          <p className=\"contact-details\">\r\n                13 Livingston Drive <br/>\r\n                Caledon, ON<br/> \r\n                Canada <br/> \r\n                Phone: 647 801 0974<br/>\r\n          </p>\r\n          <p className=\"social-media-link\">\r\n                Email: angad.singh@alum.utoronto.ca<br/>\r\n                Github: <a href=\"http://www.github.com/singha95\">http://www.github.com/singha95</a><br/>\r\n                Linkedin: <a href=\"https://www.linkedin.com/in/angad-88s\">https://www.linkedin.com/in/angad-88s</a>\r\n          </p>\r\n        </nav>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Work extends Component {\r\n  /**\r\n   * Class that represents the my Work Experience \r\n   */\r\n  render() {\r\n\r\n    return (\r\n  \r\n        <div className=\"section\"> \r\n            <p className=\"header\" id=\"Work\">Work Experience</p>\r\n            <div className=\"card card-style\" >\r\n                <nav className=\"navbar\">\r\n                    <h5 className=\"card-title\"> Tata Consulting Services - Technical Application Analyst </h5> \r\n                    <h5 className=\"card-title\"> Jan 2019 â€“ Current </h5>\r\n                </nav>\r\n                <ul>\r\n                    <li> \r\n                        Completed introductory training in Java and Eclipse. Created an application for booking rooms and for both clients and admins. \r\n                    </li>\r\n                    <li> \r\n                        Placed as TCS contractor to the Royal Bank of Canada to work on their Anti Money Laundering Systems and Fraud prevention \r\n                        system to assist with development and support of the systems.\r\n                    </li>  \r\n                    <li> \r\n                        Monitored the Cloudera Hadoop cluster and resolved any environmental failures and memory issues.\r\n                        Created SQL queries in DB2 and Hadoop to help find causes of issues. \r\n                    </li>\r\n                    <li> \r\n                        Created Scripts in Batch, Python, Shell to help automate daily tasks. This includes execution of SQL queries and the \r\n                        creation of Excel spread sheets detailing issues or irregularities in the system.  \r\n                    </li>\r\n                    <li> \r\n                        Preformed upgrades and changes on the live Linux based production environment.   \r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"card card-style\" >\r\n                <nav className=\"navbar\">\r\n                    <h5 className=\"card-title\"> Evertz Microsystems â€“ Project Engineer </h5> \r\n                    <h5 className=\"card-title\"> June 2018 â€“ Jan 2019 </h5>\r\n                </nav>\r\n                <ul>\r\n                    <li> \r\n                    Created scripts to automate the pre-possessing and transcoding of assets using JavaScript and Python. Git was used as the primary version control manager for scripts\r\n                    </li> \r\n                    <li>\r\n                        Created and maintained the primary scripts for NBCUâ€™s non-linear delivery of assets to media service providers. \r\n                        This system utilized various transfer types such as Signiant and Faspex.\r\n                    </li>\r\n                    <li> \r\n                        Created targeted SQL queries, enabling powerful on-the-fly reporting of the systemâ€™s state to important stakeholders\r\n                    </li>\r\n                    <li> \r\n                        Ran code and performed thorough testing on linux-based systems to ensure proper operation in exhaustive test cases. \r\n                    </li>\r\n                    <li> \r\n                        Participated in bi weekly sprint meetings to organize workload for the upcoming sprint. Used JIRA rank tickets based on their difficult and time required.  \r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Work;","import React, { Component } from 'react';\r\n\r\n\r\nclass Publication extends Component {\r\n  /**\r\n   * Class that represents my University Projects and Side Projects \r\n   */\r\n\r\n  render() {\r\n\r\n    return (\r\n        \r\n        <div className=\"section\"> \r\n            <p className=\"header\" id=\"Publication\">Publication</p>\r\n            <div className=\"card card-style\">\r\n                <nav className=\"navbar\">\r\n                    <h5 className=\"card-title\"> Cartoon Optical Flow â€“ MATLAB, Python, Bash </h5> \r\n                    <h5 className=\"card-title\">Sept 2017 â€“ Jan 2018 </h5> \r\n                </nav>\r\n                <ul>\r\n                    <li> \r\n                        Developed an optical flow dataset similar to MPI Sintel Dataset using the Blender Python API. The project was published as a part of the 2019 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR) under the title of Creative Flow+ Dataset. \r\n                    </li>\r\n                    <li> \r\n                        Users would be able to create their own datasets with different cartoons and stylized effects. This data set can then be used with existing optical flow algorithms as training data or to test how well the algorithm generalizes.\r\n                    </li> \r\n                    <li> \r\n                        Created scripts in bash that would help users automate the process of rendering batches of Blender objects. In addition, created Python scripts using the Blender API to randomize the camera placement in the scene. \r\n                    </li> \r\n                    <li> \r\n                        Utilized MATLAB to gather statistical data about how well some optical flow algorithms performed on the dataset \r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Publication;\r\n ","import React from 'react';\r\nimport './App.css';\r\nimport './css/menu.css'\r\nimport NavBar from './scripts/Menu.js'\r\nimport About from './scripts/About.js'\r\nimport Education from './scripts/Education.js'\r\nimport Projcts from './scripts/Projects.js'\r\nimport Contact from './scripts/Contact.js'\r\nimport Work from './scripts/Work.js'\r\nimport Publication from './scripts/Publications.js'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar/>  \r\n      <About/>\r\n      <Education/>\r\n      <Publication/>\r\n      <Work/>\r\n      <Projcts/>\r\n      <Contact/>\r\n    </div>\r\n  ); \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}