{"version":3,"sources":["files/angad_resume.pdf","scripts/Menu.js","scripts/About.js","scripts/Education.js","scripts/Projects.js","scripts/Contact.js","scripts/Work.js","scripts/Publications.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","id","href","pdf","Component","About","style","paddingTop","padding","left","paddingLeft","Education","marginTop","Projects","Contact","Work","Publication","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc982174.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/angad_resume.faf3a155.pdf\";","import React, { Component } from 'react';\nimport pdf from '../files/angad_resume.pdf'\n\n\nclass NavBar extends Component {\n  /**\n   * Class that represents the UI component that will be displayed on every page. \n   * This includes the modals for creating a post and login to the server. \n   */\n\n  render() {\n\n    return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light menu\">\n      <div className=\"collapse navbar-collapse cl-effect-15\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#About\">About <span className=\"sr-only\">(current)</span></a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#Education\">Education</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#Publication\">Publication</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#Work\">Work Experience</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#Projects\">Projects</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#Contact\">Contact</a>\n          </li>\n          <li className=\"nav-item\"> \n            <a className=\"nav-link\" href={pdf}>PDF</a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n    );\n  }\n}\n\n\nexport default NavBar;","import React, { Component } from 'react';\nimport '../css/menu.css';\n\n\n\nclass About extends Component {\n  /**\n   * Class that represents the UI component that will be displayed on every page. \n   * This includes the modals for creating a post and login to the server. \n   */\n\n  render() {\n\n    return (\n  \n        <div className=\"section\" style={{paddingTop: \"150px\"}}> \n            <nav className=\"navbar\" style={{padding: \"0px\", left:\"0px\"}}>\n              <p className=\"card-title header halfCircleBottom\" id=\"About\"\n              style={{paddingLeft: \"10px\"}}>\n                Angad Singh\n              </p>\n            </nav>\n            <p className=\"details\">I am a software developer with 2 years of experience hoping to find a career in areas such as machine learning and back-end development. \n            I graduated from the University of Toronto, Undergratuate Computer Science program with a focus in artifical intelligence.  \n            </p>\n        </div>\n    );\n  }\n}\n\n\nexport default About;","import React, { Component } from 'react';\n\n\nclass Education extends Component {\n  /**\n   * Class that represents my Education Details \n   */\n\n  render() {\n\n    return (\n  \n        <div className=\"section\"> \n            <p className=\"header\" id=\"Education\">Education</p>\n            <p className=\"details\" style={{marginTop: \"0px\"}}>\n            University of Toronto Sept 2014 - May 2018<br/>\n            Honors Bachelor of Science in Computer Science,<br/>\n            Focus in Artificial Intelligence<br/>\n            </p>\n        </div>\n    );\n  }\n}\n\n\nexport default Education;","import React, { Component } from 'react';\n\n\nclass Projects extends Component {\n    /**\n     * Class that represents my University Projects and Side Projects \n     */\n\n    render() {\n\n        return (\n\n            <div className=\"section\">\n                <p className=\"header\" id=\"Projects\">Personal Projects</p>\n\n\n                <div className=\"card card-style\" >\n                    <nav className=\"navbar\">\n                        <h5 className=\"card-title\">\n                            <a href=\"https://github.com/Richmond-Truong/groupFinder\">\n                                Conky Stock Price – C++, Python\n                            </a>\n                        </h5>\n                        <h5 className=\"card-title\">  Jan 2020 – Mar 2020</h5>\n                    </nav>\n                    <ul>\n                        <li>Created various terminal tools to retrieve stock data from yahoo finance. Allows users to quickly retrieve stock details from the terminal  </li>\n                        <li>Created scripts for users to use these scripts along with Conky to set their background with update to date stock prices </li>\n                        <li>Utilized the curl C++ library to parse the information directly from the Yahoo finance website</li>\n                        <li>Created Python scripts to get monthly and weekly graphs of prices for stocks. </li>\n                    </ul>\n                </div>\n\n\n                <div className=\"card card-style\" >\n                    <nav className=\"navbar\">\n                        <h5 className=\"card-title\">\n                            <a href=\"https://github.com/singha95/HearthstoneCardViewer\">Hearthstone Card Viewer - Django, Python, HTML, Bootstrap, SQL</a>\n                        </h5>\n                        <h5 className=\"card-title\"> Sept 2019 - Nov 2019</h5>\n                    </nav>\n                    <ul>\n                        <li> \n                            Utilized the Blizzard Hearthstone API in order to create a web app for players to create and search for new cards. \n                        </li>\n                        <li>\n                            Used the oauth2 protocol data about current cards in the game is pulled directly from Blizzards servers. \n                        </li>\n                        <li> \n                            Utilized SQLite so that users can search quickly search for cards based on type, mana cost and name.\n                        </li>\n                    </ul>\n                </div>\n\n\n                <div className=\"card card-style\" >\n                    <nav className=\"navbar\">\n                        <h5 className=\"card-title\">\n                            <a href=\"https://github.com/singha95/mlb_analytics\">MLB Analytics - JavaScript, React, NodeJS, Bootstrap</a>\n                        </h5>\n                        <h5 className=\"card-title\"> Aug 2019 - Sept 2019</h5>\n                    </nav>\n                    <ul>\n                        <li> \n                            Utilized the MLB Stats API to create an interactive web app that will display stats and rosters for the different MLB teams. \n                        </li>\n                        <li>\n                            Deployed the web app using Heroku. ( \n                                <a href=\"https://mlb-player-analytics.herokuapp.com/\" >\n                                https://mlb-player-analytics.herokuapp.com/</a>)\n                        </li>\n                        <li>\n                            Implemented support for mobile devices to ensure that the app is compatible with multiple devices. \n                        </li>\n                        <li> \n                            Preformed user testing to receive feedback to help make the UI more engaging and easy to use.  \n                        </li>\n\n                    </ul>\n                </div>\n\n\n                <div className=\"card card-style\" >\n                    <nav className=\"navbar\">\n                        <h5 className=\"card-title\">\n                            <a href=\"https://github.com/singha95/CSPSolver\">\n                                CSP Problem Solver - C#, Python\n                                </a>\n                        </h5>\n                        <h5 className=\"card-title\"> July 2017 – Sept 2017 </h5>\n                    </nav>\n                    <ul>\n                        <li>\n                            Created a constraint satisfaction problem solver in Python. The program takes variables and theirs constraints. The program will provide a valid assignment for each of the variables within the given constraints.\n                        </li>\n                        <li>\n                            Implemented a Nonogram puzzle in order to test the performance and correctness of the program. The result of the puzzle would be displayed in a UI using the Tkinter Python API\n                        </li>\n                        <li>\n                            Converted the program into C# and improved memory efficiency using lambda functions for the constraints.\n                        </li>\n                    </ul>\n                </div>\n\n            </div >\n        );\n    }\n}\n\n\nexport default Projects;\n","import React, { Component } from 'react';\n\n\nclass Contact extends Component {\n  /**\n   * Class that represents my Contacts details, Linkedin and Github \n   */\n\n  render() {\n\n    return (\n  \n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" id=\"Contact\">\n          <p className=\"contact-details\">\n                Caledon, ON<br/> \n                Canada <br/> \n          </p>\n          <p className=\"social-media-link\">\n                Email: angad88@hotmail.com<br/>\n                Github: <a href=\"http://www.github.com/singha95\">http://www.github.com/singha95</a><br/>\n                Linkedin: <a href=\"https://www.linkedin.com/in/angad-88s\">https://www.linkedin.com/in/angad-88s</a>\n          </p>\n        </nav>\n    );\n  }\n}\n\n\nexport default Contact;\n","import React, { Component } from 'react';\n\n\nclass Work extends Component {\n    /**\n     * Class that represents the my Work Experience \n     */\n    render() {\n\n        return (\n\n            <div className=\"section\">\n                <p className=\"header\" id=\"Work\">Work Experience</p>\n                <div className=\"card card-style\" >\n                    <nav className=\"navbar\">\n                        <h5 className=\"card-title\">Software Developer </h5>\n                        <h5 className=\"card-title\"> June 2020 – Current </h5>\n                    </nav>\n                    <nav className=\"navbar\">\n                        <h10>Bell Canada</h10>\n                    </nav>\n                    <ul>\n                        <li> Develop dashboards to display competitor mobile network speeds across Canada  </li>\n                        <li> Created queries to retrieve data from MariaDB to be displayed on dashboards  </li>\n                        <li> Utilized the Atlassian suite of tools (JIRA, Confluence) to maintain clear lines of communication with team members and project stakeholders </li>\n                        <li> Technologies: Python, Dash, CSS, SQL, Docker, Git </li>\n                    </ul>\n                </div>\n                <div className=\"card card-style\" >\n                    <nav className=\"navbar\">\n                        <h5 className=\"card-title\">Technical Application Analyst </h5>\n                        <h5 className=\"card-title\"> Feb 2019 – May 2020 </h5>\n                    </nav>\n                    <nav className=\"navbar\">\n                        <h10>Tata Consultancy Services</h10>\n                    </nav>\n                    <ul>\n                        <li> Develop queries to give accurate reports of potential fraudulent transactions or missing transactions to assist with the development of the application.  </li>\n                        <li> Develop scripts in order to help automate daily tasks. This includes execution of SQL queries and the automatic creation of spread sheets detailing issues in the system.  </li>\n                        <li> Collaborate with other teams to organize major upgrades in order to improve the system performance without causing a major downtime to the system. </li>\n                        <li> Support production environment and resolved any failures or memory issues to ensure that the application was preforming as expected. </li>\n                        <li> Technologies: Python, Bash, PowerShell, SQL, Hadoop, DB2 </li>\n                    </ul>\n                </div>\n                <div className=\"card card-style\" >\n                    <nav className=\"navbar\">\n                        <h5 className=\"card-title\"> Project Engineer </h5>\n                        <h5 className=\"card-title\"> May 2018 – Jan 2019 </h5>\n                    </nav>\n                    <nav className=\"navbar\">\n                        <h10> Evertz Microsystems </h10>\n                    </nav>\n                    <ul>\n                        <li> Automated the pre-possessing and transcoding of assets in order for customers to play out videos to their respective users and clients. </li>\n                        <li> Developed the primary scripts for NBCU’s non-linear delivery of assets to media service providers to transfer assets to various locations using different transfer methods, such as Signiant and Faspex.</li>\n                        <li> Refactored SQL queries and reduced run time of existing queries by 50%, in order to improve migration to a new DBMS. </li>\n                        <li> Technologies: JavaScript, Python, SQL, DB2, MariaDB, Git </li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Work;","import React, { Component } from 'react';\r\n\r\n\r\nclass Publication extends Component {\r\n    /**\r\n     * Class that represents my University Projects and Side Projects \r\n     */\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"section\">\r\n                <p className=\"header\" id=\"Publication\">Publication</p>\r\n                <div className=\"card card-style\">\r\n                    <nav className=\"navbar\">\r\n                        <h5 className=\"card-title\">\r\n                            <a href=\"http://openaccess.thecvf.com/content_CVPR_2019/papers/Shugrina_Creative_Flow_Dataset_CVPR_2019_paper.pdf\">\r\n                                Cartoon Optical Flow – MATLAB, Python, Bash\r\n                        </a>\r\n                        </h5>\r\n                        <h5 className=\"card-title\">Sept 2017 – Jan 2018 </h5>\r\n                    </nav>\r\n                    <ul>\r\n                        <li> Developed an optical flow dataset similar to MPI Sintel Dataset using the Blender Python API. </li>\r\n                        <li> Users would be able to create their own datasets with different stylized effects. This data set can then used with existing optical flow algorithms as training data or to test how well the algorithm generalizes.</li>\r\n                        <li> Developed scripts in bash that would help users automate the process of rendering batches of Blender objects.</li>\r\n                        <li> Developed scripts using the Blender API to randomize the camera placement in the scene in order to increase the size of the dataset. </li>\r\n                        <li> The project was published as a part of the 2019 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR) under the title of Creative Flow+ Dataset. </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Publication;\r\n","import React from 'react';\nimport './App.css';\nimport './css/menu.css'\nimport NavBar from './scripts/Menu.js'\nimport About from './scripts/About.js'\nimport Education from './scripts/Education.js'\nimport Projcts from './scripts/Projects.js'\nimport Contact from './scripts/Contact.js'\nimport Work from './scripts/Work.js'\nimport Publication from './scripts/Publications.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar/>  \n      <About/>\n      <Work/>\n      <Projcts/>\n      <Publication/>\n      <Education/>\n      <Contact/>\n    </div>\n  ); \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}